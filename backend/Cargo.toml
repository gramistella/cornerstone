[package]
name = "backend"
version.workspace = true
edition.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true


[dependencies]
axum = { workspace = true, features = ["macros"] }
tokio = { workspace = true, features = ["full", "rt-multi-thread"] }
reqwest = { workspace = true, features = ["json"] }
chrono = { workspace = true }
tower-http = { workspace = true, features = ["fs", "cors", "trace", "request-id"] }
common = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true }
dotenvy = { workspace = true }
anyhow = { workspace = true }
sqlx = { workspace = true, features = ["runtime-tokio", "macros", "chrono", "migrate"] }
axum-extra = { workspace = true, features = ["typed-header"] }
jsonwebtoken = { workspace = true }
bcrypt = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
once_cell = { workspace = true }
figment = { workspace = true, features = ["toml", "env"] }
validator = { workspace = true, features = ["derive"] }
rand = { workspace = true }
base64 = { workspace = true }
sha2 = { workspace = true }
hex = { workspace = true }
tower_governor = { workspace = true }
thiserror = { workspace = true }
utoipa = { workspace = true, features = ["axum_extras", "chrono", "openapi_extensions"] }
utoipa-swagger-ui = { workspace = true, features = ["axum"] }
uuid = { workspace = true, features = ["v4"] }

[features]
default = ["svelte-ui", "db-sqlite"]
svelte-ui = []
slint-ui = []
db-sqlite = ["sqlx/sqlite", "common/db-sqlite"]
db-postgres = ["sqlx/postgres", "common/db-postgres"]

[lib]
name = "backend"
path = "src/lib.rs"

[dev-dependencies]
# Dependencies needed ONLY for running tests and benchmarks

# For making test requests and handling response bodies
hyper = { workspace = true, features = ["full"] }
# For collecting the response body into bytes.
http-body-util = { workspace = true }
# For deserializing JSON in our tests
serde_json = { workspace = true }
# For the `ServiceExt::oneshot` testing utility
tower = { workspace = true, features = ["full"] }
sqlx = { workspace = true, features = ["runtime-tokio", "sqlite", "postgres", "macros"] }
